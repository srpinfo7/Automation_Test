<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="2" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-05-21T13:30:36 IST" name="Suite" finished-at="2023-05-21T13:31:02 IST" duration-ms="25811">
    <groups>
      <group name="FLVs">
        <method signature="LoginFLVs.logInFLV(java.util.HashMap)[pri:0, instance:Ecommerce.EcommerceOder.LoginFLVs@78d6692f]" name="logInFLV" class="Ecommerce.EcommerceOder.LoginFLVs"/>
      </group> <!-- FLVs -->
    </groups>
    <test started-at="2023-05-21T13:30:36 IST" name="LoginValidations" finished-at="2023-05-21T13:30:46 IST" duration-ms="9714">
      <class name="Ecommerce.EcommerceOder.LoginFLVs">
        <test-method is-config="true" signature="lunchApp()[pri:0, instance:Ecommerce.EcommerceOder.LoginFLVs@78d6692f]" started-at="2023-05-21T13:30:36 IST" name="lunchApp" finished-at="2023-05-21T13:30:41 IST" duration-ms="5039" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApp -->
        <test-method signature="logInFLV(java.util.HashMap)[pri:0, instance:Ecommerce.EcommerceOder.LoginFLVs@78d6692f]" started-at="2023-05-21T13:30:41 IST" name="logInFLV" data-provider="data" finished-at="2023-05-21T13:30:42 IST" duration-ms="713" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Sameer, email=Sameer@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInFLV -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Ecommerce.EcommerceOder.LoginFLVs@78d6692f]" started-at="2023-05-21T13:30:42 IST" name="tearDown" finished-at="2023-05-21T13:30:42 IST" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApp()[pri:0, instance:Ecommerce.EcommerceOder.LoginFLVs@78d6692f]" started-at="2023-05-21T13:30:42 IST" name="lunchApp" finished-at="2023-05-21T13:30:45 IST" duration-ms="2531" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApp -->
        <test-method signature="logInFLV(java.util.HashMap)[pri:0, instance:Ecommerce.EcommerceOder.LoginFLVs@78d6692f]" started-at="2023-05-21T13:30:45 IST" name="logInFLV" data-provider="data" finished-at="2023-05-21T13:30:45 IST" duration-ms="637" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Sameer@123, email=Samee@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInFLV -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Ecommerce.EcommerceOder.LoginFLVs@78d6692f]" started-at="2023-05-21T13:30:45 IST" name="tearDown" finished-at="2023-05-21T13:30:46 IST" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Ecommerce.EcommerceOder.LoginFLVs -->
    </test> <!-- LoginValidations -->
    <test started-at="2023-05-21T13:30:46 IST" name="Make a Order" finished-at="2023-05-21T13:31:02 IST" duration-ms="15469">
      <class name="Ecommerce.EcommerceOder.MakeOrder">
        <test-method is-config="true" signature="lunchApp()[pri:0, instance:Ecommerce.EcommerceOder.MakeOrder@6bffbc6d]" started-at="2023-05-21T13:30:46 IST" name="lunchApp" finished-at="2023-05-21T13:30:49 IST" duration-ms="3351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApp -->
        <test-method signature="makeOrder()[pri:0, instance:Ecommerce.EcommerceOder.MakeOrder@6bffbc6d]" started-at="2023-05-21T13:30:49 IST" name="makeOrder" finished-at="2023-05-21T13:31:01 IST" duration-ms="11685" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (1085, 651)
  (Session info: chrome=113.0.5672.127)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fbebc77f120cd7f93460bd8b66bc80f2, clickElement {id=3C329C29D89F25C3DBEB1D78389E46F1_element_57}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 113.0.5672.127, chrome: {chromedriverVersion: 113.0.5672.63 (0e1a4471d5ae..., userDataDir: C:\Users\Avenger\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:61455}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:61455/devtoo..., se:cdpVersion: 113.0.5672.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (fbebc77f120cd7f93460bd8b66bc80f2)] -> css selector: .btnn]
Session ID: fbebc77f120cd7f93460bd8b66bc80f2]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (1085, 651)
  (Session info: chrome=113.0.5672.127)
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fbebc77f120cd7f93460bd8b66bc80f2, clickElement {id=3C329C29D89F25C3DBEB1D78389E46F1_element_57}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 113.0.5672.127, chrome: {chromedriverVersion: 113.0.5672.63 (0e1a4471d5ae..., userDataDir: C:\Users\Avenger\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:61455}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:61455/devtoo..., se:cdpVersion: 113.0.5672.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (fbebc77f120cd7f93460bd8b66bc80f2)] -> css selector: .btnn]
Session ID: fbebc77f120cd7f93460bd8b66bc80f2
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:257)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy19.click(Unknown Source)
at Ecommerce.EcommerceOder.CheckOut.checkOut(CheckOut.java:31)
at Ecommerce.EcommerceOder.MakeOrder.makeOrder(MakeOrder.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Ecommerce.EcommerceOder.MakeOrder@6bffbc6d]" started-at="2023-05-21T13:31:01 IST" name="tearDown" finished-at="2023-05-21T13:31:02 IST" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkOrder()[pri:0, instance:Ecommerce.EcommerceOder.MakeOrder@6bffbc6d]" started-at="2023-05-21T13:31:02 IST" name="checkOrder" finished-at="2023-05-21T13:31:02 IST" depends-on-methods="Ecommerce.EcommerceOder.MakeOrder.makeOrder" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method MakeOrder.checkOrder()[pri:0, instance:Ecommerce.EcommerceOder.MakeOrder@6bffbc6d] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method MakeOrder.checkOrder()[pri:0, instance:Ecommerce.EcommerceOder.MakeOrder@6bffbc6d] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOrder -->
      </class> <!-- Ecommerce.EcommerceOder.MakeOrder -->
    </test> <!-- Make a Order -->
  </suite> <!-- Suite -->
</testng-results>
